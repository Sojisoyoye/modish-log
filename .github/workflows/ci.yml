name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [frontend, backend]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: ${{ matrix.app }}/package-lock.json

      - name: Install Dependencies
        working-directory: ${{ matrix.app }}
        run: npm ci

      - name: Run ESLint
        working-directory: ${{ matrix.app }}
        run: npm run lint
        continue-on-error: false

      - name: Run Type Check
        working-directory: ${{ matrix.app }}
        run: npm run type-check
        continue-on-error: false

  test:
    name: Run Tests
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [frontend, backend]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: ${{ matrix.app }}/package-lock.json

      - name: Install Dependencies
        working-directory: ${{ matrix.app }}
        run: npm ci

      - name: Run Tests
        working-directory: ${{ matrix.app }}
        run: npm test -- --passWithNoTests
        env:
          CI: true

  build:
    name: Build Application
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [frontend, backend]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: ${{ matrix.app }}/package-lock.json

      - name: Install Dependencies
        working-directory: ${{ matrix.app }}
        run: npm ci

      - name: Build
        working-directory: ${{ matrix.app }}
        run: npm run build
        env:
          CI: true

      - name: Archive Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.app }}-build
          path: |
            ${{ matrix.app == 'frontend' && 'frontend/build/' || 'backend/dist/' }}
          retention-days: 5

  notify-completion:
    name: Notify Build Completion
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set Status
        run: echo "CI Pipeline completed successfully. Deployment handled by CD Pipeline."
